{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _clsx2 = _interopRequireDefault(require(\"clsx\"));\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nrequire(\"../Button\"); // So we don't have any override priority issue.\n\n\nvar styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8,\n    justifyContent: 'flex-end'\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > * + *': {\n      marginLeft: 8\n    }\n  }\n};\nexports.styles = styles;\n\nvar DialogActions = _react.default.forwardRef(function DialogActions(props, ref) {\n  var disableSpacing = props.disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = (0, _objectWithoutProperties2.default)(props, [\"disableSpacing\", \"classes\", \"className\"]);\n  return _react.default.createElement(\"div\", (0, _extends2.default)({\n    className: (0, _clsx2.default)(classes.root, (0, _defineProperty2.default)({}, classes.spacing, !disableSpacing), className),\n    ref: ref\n  }, other));\n});\n\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: _propTypes.default.bool\n} : void 0;\nDialogActions.defaultProps = {\n  disableSpacing: false\n};\n\nvar _default = (0, _withStyles.default)(styles, {\n  name: 'MuiDialogActions'\n})(DialogActions);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}