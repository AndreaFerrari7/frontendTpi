{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactTransitionGroup = require(\"react-transition-group\");\n\nvar _transitions = require(\"../styles/transitions\");\n\nvar _withTheme = _interopRequireDefault(require(\"../styles/withTheme\"));\n\nvar _utils = require(\"../transitions/utils\");\n\nvar _reactHelpers = require(\"../utils/reactHelpers\"); // @inheritedComponent Transition\n\n\nvar styles = {\n  entering: {\n    transform: 'scale(1)'\n  },\n  entered: {\n    transform: 'scale(1)'\n  }\n};\n/**\n * The Zoom transition can be used for the floating variant of the\n * [Button](https://material-ui.com/demos/buttons/#floating-action-buttons) component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nvar Zoom = _react.default.forwardRef(function Zoom(props, ref) {\n  var children = props.children,\n      inProp = props.in,\n      onEnter = props.onEnter,\n      onExit = props.onExit,\n      style = props.style,\n      theme = props.theme,\n      other = (0, _objectWithoutProperties2.default)(props, [\"children\", \"in\", \"onEnter\", \"onExit\", \"style\", \"theme\"]);\n  var handleRef = (0, _reactHelpers.useForkRef)(children.ref, ref);\n\n  var handleEnter = function handleEnter(node) {\n    (0, _utils.reflow)(node); // So the animation always start from the start.\n\n    var transitionProps = (0, _utils.getTransitionProps)(props, {\n      mode: 'enter'\n    });\n    node.style.webkitTransition = theme.transitions.create('transform', transitionProps);\n    node.style.transition = theme.transitions.create('transform', transitionProps);\n\n    if (onEnter) {\n      onEnter(node);\n    }\n  };\n\n  var handleExit = function handleExit(node) {\n    var transitionProps = (0, _utils.getTransitionProps)(props, {\n      mode: 'exit'\n    });\n    node.style.webkitTransition = theme.transitions.create('transform', transitionProps);\n    node.style.transition = theme.transitions.create('transform', transitionProps);\n\n    if (onExit) {\n      onExit(node);\n    }\n  };\n\n  return _react.default.createElement(_reactTransitionGroup.Transition, (0, _extends2.default)({\n    appear: true,\n    in: inProp,\n    onEnter: handleEnter,\n    onExit: handleExit\n  }, other), function (state, childProps) {\n    return _react.default.cloneElement(children, (0, _extends2.default)({\n      style: (0, _extends2.default)({\n        transform: 'scale(0)',\n        visibility: state === 'exited' && !inProp ? 'hidden' : undefined\n      }, styles[state], style, children.props.style),\n      ref: handleRef\n    }, childProps));\n  });\n});\n\nprocess.env.NODE_ENV !== \"production\" ? Zoom.propTypes = {\n  /**\n   * A single child content element.\n   */\n  children: _propTypes.default.element,\n\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: _propTypes.default.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: _propTypes.default.func,\n\n  /**\n   * @ignore\n   */\n  onExit: _propTypes.default.func,\n\n  /**\n   * @ignore\n   */\n  style: _propTypes.default.object,\n\n  /**\n   * @ignore\n   */\n  theme: _propTypes.default.object.isRequired,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  timeout: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({\n    enter: _propTypes.default.number,\n    exit: _propTypes.default.number\n  })])\n} : void 0;\nZoom.defaultProps = {\n  timeout: {\n    enter: _transitions.duration.enteringScreen,\n    exit: _transitions.duration.leavingScreen\n  }\n};\n\nvar _default = (0, _withTheme.default)(Zoom);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}