{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _debounce = _interopRequireDefault(require(\"debounce\"));\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nvar _reactHelpers = require(\"../utils/reactHelpers\"); // < 1kb payload overhead when lodash/debounce is > 3kb.\n\n\nvar styles = {\n  /* Styles applied to the root element. */\n  root: {\n    boxSizing: 'border-box',\n    flexShrink: 0\n  },\n\n  /* Styles applied to the `div` element that wraps the children. */\n  tile: {\n    position: 'relative',\n    display: 'block',\n    // In case it's not rendered with a div.\n    height: '100%',\n    overflow: 'hidden'\n  },\n\n  /* Styles applied to an `img` element child, if needed to ensure it covers the tile. */\n  imgFullHeight: {\n    height: '100%',\n    transform: 'translateX(-50%)',\n    position: 'relative',\n    left: '50%'\n  },\n\n  /* Styles applied to an `img` element child, if needed to ensure it covers the tile. */\n  imgFullWidth: {\n    width: '100%',\n    position: 'relative',\n    transform: 'translateY(-50%)',\n    top: '50%'\n  }\n};\nexports.styles = styles;\n\nvar fit = function fit(imgEl, classes) {\n  if (!imgEl || !imgEl.complete) {\n    return;\n  }\n\n  if (imgEl.width / imgEl.height > imgEl.parentNode.offsetWidth / imgEl.parentNode.offsetHeight) {\n    var _imgEl$classList, _imgEl$classList2;\n\n    (_imgEl$classList = imgEl.classList).remove.apply(_imgEl$classList, (0, _toConsumableArray2.default)(classes.imgFullWidth.split(' ')));\n\n    (_imgEl$classList2 = imgEl.classList).add.apply(_imgEl$classList2, (0, _toConsumableArray2.default)(classes.imgFullHeight.split(' ')));\n  } else {\n    var _imgEl$classList3, _imgEl$classList4;\n\n    (_imgEl$classList3 = imgEl.classList).remove.apply(_imgEl$classList3, (0, _toConsumableArray2.default)(classes.imgFullHeight.split(' ')));\n\n    (_imgEl$classList4 = imgEl.classList).add.apply(_imgEl$classList4, (0, _toConsumableArray2.default)(classes.imgFullWidth.split(' ')));\n  }\n};\n\nfunction ensureImageCover(imgEl, classes) {\n  if (!imgEl) {\n    return;\n  }\n\n  if (imgEl.complete) {\n    fit(imgEl, classes);\n  } else {\n    imgEl.addEventListener('load', function () {\n      fit(imgEl, classes);\n    });\n  }\n}\n\nvar GridListTile = _react.default.forwardRef(function GridListTile(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      cols = props.cols,\n      Component = props.component,\n      rows = props.rows,\n      other = (0, _objectWithoutProperties2.default)(props, [\"children\", \"classes\", \"className\", \"cols\", \"component\", \"rows\"]);\n\n  var imgRef = _react.default.useRef(null);\n\n  _react.default.useEffect(function () {\n    ensureImageCover(imgRef.current, classes);\n  });\n\n  _react.default.useEffect(function () {\n    var handleResize = (0, _debounce.default)(function () {\n      fit(imgRef.current, classes);\n    }, 166); // Corresponds to 10 frames at 60 Hz.\n\n    window.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [classes]);\n\n  return _react.default.createElement(Component, (0, _extends2.default)({\n    className: (0, _clsx.default)(classes.root, className),\n    ref: ref\n  }, other), _react.default.createElement(\"div\", {\n    className: classes.tile\n  }, _react.default.Children.map(children, function (child) {\n    if (!_react.default.isValidElement(child)) {\n      return null;\n    }\n\n    if (child.type === 'img' || (0, _reactHelpers.isMuiElement)(child, ['Image'])) {\n      return _react.default.cloneElement(child, {\n        ref: imgRef\n      });\n    }\n\n    return child;\n  })));\n});\n\nprocess.env.NODE_ENV !== \"production\" ? GridListTile.propTypes = {\n  /**\n   * Theoretically you can pass any node as children, but the main use case is to pass an img,\n   * in which case GridListTile takes care of making the image \"cover\" available space\n   * (similar to `background-size: cover` or to `object-fit: cover`).\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * Width of the tile in number of grid cells.\n   */\n  cols: _propTypes.default.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: _propTypes.default.elementType,\n\n  /**\n   * Height of the tile in number of grid cells.\n   */\n  rows: _propTypes.default.number\n} : void 0;\nGridListTile.defaultProps = {\n  cols: 1,\n  component: 'li',\n  rows: 1\n};\n\nvar _default = (0, _withStyles.default)(styles, {\n  name: 'MuiGridListTile'\n})(GridListTile);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}