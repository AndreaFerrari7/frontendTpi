{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setTranslateValue = setTranslateValue;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _debounce = _interopRequireDefault(require(\"debounce\"));\n\nvar _reactTransitionGroup = require(\"react-transition-group\");\n\nvar _reactHelpers = require(\"../utils/reactHelpers\");\n\nvar _withTheme = _interopRequireDefault(require(\"../styles/withTheme\"));\n\nvar _transitions = require(\"../styles/transitions\");\n\nvar _utils = require(\"../transitions/utils\"); // @inheritedComponent Transition\n// < 1kb payload overhead when lodash/debounce is > 3kb.\n\n\nvar GUTTER = 24; // Translate the node so he can't be seen on the screen.\n// Later, we gonna translate back the node to his original location\n// with `translate3d(0, 0, 0)`.`\n\nfunction getTranslateValue(direction, node) {\n  var rect = node.getBoundingClientRect();\n  var transform;\n\n  if (node.fakeTransform) {\n    transform = node.fakeTransform;\n  } else {\n    var computedStyle = window.getComputedStyle(node);\n    transform = computedStyle.getPropertyValue('-webkit-transform') || computedStyle.getPropertyValue('transform');\n  }\n\n  var offsetX = 0;\n  var offsetY = 0;\n\n  if (transform && transform !== 'none' && typeof transform === 'string') {\n    var transformValues = transform.split('(')[1].split(')')[0].split(',');\n    offsetX = parseInt(transformValues[4], 10);\n    offsetY = parseInt(transformValues[5], 10);\n  }\n\n  if (direction === 'left') {\n    return \"translateX(100vw) translateX(-\".concat(rect.left - offsetX, \"px)\");\n  }\n\n  if (direction === 'right') {\n    return \"translateX(-\".concat(rect.left + rect.width + GUTTER - offsetX, \"px)\");\n  }\n\n  if (direction === 'up') {\n    return \"translateY(100vh) translateY(-\".concat(rect.top - offsetY, \"px)\");\n  } // direction === 'down'\n\n\n  return \"translateY(-\".concat(rect.top + rect.height + GUTTER - offsetY, \"px)\");\n}\n\nfunction setTranslateValue(direction, node) {\n  var transform = getTranslateValue(direction, node);\n\n  if (transform) {\n    node.style.webkitTransform = transform;\n    node.style.transform = transform;\n  }\n}\n/**\n * The Slide transition is used by the [Drawer](/demos/drawers/) component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\n\nvar Slide = _react.default.forwardRef(function Slide(props, ref) {\n  var children = props.children,\n      direction = props.direction,\n      inProp = props.in,\n      onEnter = props.onEnter,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      style = props.style,\n      theme = props.theme,\n      timeout = props.timeout,\n      other = (0, _objectWithoutProperties2.default)(props, [\"children\", \"direction\", \"in\", \"onEnter\", \"onEntering\", \"onExit\", \"onExited\", \"style\", \"theme\", \"timeout\"]);\n\n  var childrenRef = _react.default.useRef();\n  /**\n   * used in cloneElement(children, { ref: handleRef })\n   */\n\n\n  var handleOwnRef = _react.default.useCallback(function (instance) {\n    // #StrictMode ready\n    childrenRef.current = _reactDom.default.findDOMNode(instance);\n  }, []);\n\n  var handleRefIntermediary = (0, _reactHelpers.useForkRef)(children.ref, handleOwnRef);\n  var handleRef = (0, _reactHelpers.useForkRef)(handleRefIntermediary, ref);\n\n  var handleEnter = function handleEnter() {\n    var node = childrenRef.current;\n    setTranslateValue(direction, node);\n    (0, _utils.reflow)(node);\n\n    if (onEnter) {\n      onEnter(node);\n    }\n  };\n\n  var handleEntering = function handleEntering() {\n    var node = childrenRef.current;\n    var transitionProps = (0, _utils.getTransitionProps)({\n      timeout: timeout,\n      style: style\n    }, {\n      mode: 'enter'\n    });\n    node.style.webkitTransition = theme.transitions.create('-webkit-transform', (0, _extends2.default)({}, transitionProps, {\n      easing: theme.transitions.easing.easeOut\n    }));\n    node.style.transition = theme.transitions.create('transform', (0, _extends2.default)({}, transitionProps, {\n      easing: theme.transitions.easing.easeOut\n    }));\n    node.style.webkitTransform = 'translate(0, 0)';\n    node.style.transform = 'translate(0, 0)';\n\n    if (onEntering) {\n      onEntering(node);\n    }\n  };\n\n  var handleExit = function handleExit() {\n    var node = childrenRef.current;\n    var transitionProps = (0, _utils.getTransitionProps)({\n      timeout: timeout,\n      style: style\n    }, {\n      mode: 'exit'\n    });\n    node.style.webkitTransition = theme.transitions.create('-webkit-transform', (0, _extends2.default)({}, transitionProps, {\n      easing: theme.transitions.easing.sharp\n    }));\n    node.style.transition = theme.transitions.create('transform', (0, _extends2.default)({}, transitionProps, {\n      easing: theme.transitions.easing.sharp\n    }));\n    setTranslateValue(direction, node);\n\n    if (onExit) {\n      onExit(node);\n    }\n  };\n\n  var handleExited = function handleExited() {\n    var node = childrenRef.current; // No need for transitions when the component is hidden\n\n    node.style.webkitTransition = '';\n    node.style.transition = '';\n\n    if (onExited) {\n      onExited(node);\n    }\n  };\n\n  var updatePosition = _react.default.useCallback(function () {\n    if (childrenRef.current) {\n      setTranslateValue(direction, childrenRef.current);\n    }\n  }, [direction]);\n\n  _react.default.useEffect(function () {\n    // Skip configuration where the position is screen size invariant.\n    if (!inProp && direction !== 'down' && direction !== 'right') {\n      var handleResize = (0, _debounce.default)(function () {\n        if (childrenRef.current) {\n          setTranslateValue(direction, childrenRef.current);\n        }\n      }, 166); // Corresponds to 10 frames at 60 Hz.\n\n      window.addEventListener('resize', handleResize);\n      return function () {\n        handleResize.clear();\n        window.removeEventListener('resize', handleResize);\n      };\n    }\n\n    return function () {};\n  }, [direction, inProp]);\n\n  _react.default.useEffect(function () {\n    if (!inProp) {\n      // We need to update the position of the drawer when the direction change and\n      // when it's hidden.\n      updatePosition();\n    }\n  }, [inProp, updatePosition]);\n\n  return _react.default.createElement(_reactTransitionGroup.Transition, (0, _extends2.default)({\n    onEnter: handleEnter,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    appear: true,\n    in: inProp,\n    timeout: timeout\n  }, other), function (state, childProps) {\n    return _react.default.cloneElement(children, (0, _extends2.default)({\n      ref: handleRef,\n      style: (0, _extends2.default)({\n        visibility: state === 'exited' && !inProp ? 'hidden' : undefined\n      }, style, children.props.style)\n    }, childProps));\n  });\n});\n\nprocess.env.NODE_ENV !== \"production\" ? Slide.propTypes = {\n  /**\n   * A single child content element.\n   *\n   * ⚠️The component used as a child [must be able to hold a ref](/guides/composition/#children).\n   */\n  children: _propTypes.default.element,\n\n  /**\n   * Direction the child node will enter from.\n   */\n  direction: _propTypes.default.oneOf(['left', 'right', 'up', 'down']),\n\n  /**\n   * If `true`, show the component; triggers the enter or exit animation.\n   */\n  in: _propTypes.default.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: _propTypes.default.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: _propTypes.default.func,\n\n  /**\n   * @ignore\n   */\n  onExit: _propTypes.default.func,\n\n  /**\n   * @ignore\n   */\n  onExited: _propTypes.default.func,\n\n  /**\n   * @ignore\n   */\n  style: _propTypes.default.object,\n\n  /**\n   * @ignore\n   */\n  theme: _propTypes.default.object.isRequired,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  timeout: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({\n    enter: _propTypes.default.number,\n    exit: _propTypes.default.number\n  })])\n} : void 0;\nSlide.defaultProps = {\n  direction: 'down',\n  timeout: {\n    enter: _transitions.duration.enteringScreen,\n    exit: _transitions.duration.leavingScreen\n  }\n};\n\nvar _default = (0, _withTheme.default)(Slide);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}